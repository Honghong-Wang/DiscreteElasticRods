#ifndef MAINWINDOW_H
#define MAINWINDOW_H

#include <QMainWindow>
#include <QTimer>
#include <QElapsedTimer>

#include "GLWindow.h"
#include "Scene.h"
#include "AnimationBuffer.h"

namespace Ui {
    class MainWindow;
}

class MainWindow : public QMainWindow
{
    Q_OBJECT

public:
	//----------------------------------------------------------------------------------------------------------------------
	/// @brief ctor
	/// @param[in] parent the parent window
	//----------------------------------------------------------------------------------------------------------------------
    explicit MainWindow(QWidget *parent = 0);
	//----------------------------------------------------------------------------------------------------------------------
	/// @brief dtor
	//----------------------------------------------------------------------------------------------------------------------
	~MainWindow();

private:
	//----------------------------------------------------------------------------------------------------------------------
    /// @brief our user interface
	//----------------------------------------------------------------------------------------------------------------------
	Ui::MainWindow *m_ui;
	//----------------------------------------------------------------------------------------------------------------------
    /// @brief our open gl renderer
	//----------------------------------------------------------------------------------------------------------------------
	GLWindow *m_gl;
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief our scene
    //----------------------------------------------------------------------------------------------------------------------
    Scene* m_scene;

    //----------------------------------------------------------------------------------------------------------------------
    /// @brief the update timer
    //----------------------------------------------------------------------------------------------------------------------
    QTimer m_updateTimer;
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief the timer used for fps measuring
    //----------------------------------------------------------------------------------------------------------------------
    QElapsedTimer m_chronometer;
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief selected object to which transformations calculated on mouse movement are applied
    /// if NULL camera is modified
    //----------------------------------------------------------------------------------------------------------------------
    RenderObject* m_selectedObject;

    bool m_exporting;
    unsigned m_frame;

    QString m_exportDir;
    QString m_exportGeoDir;
    QString m_exportCurvDir;

    QTimer m_recordTimer;
    AnimationBuffer m_animationBuffer;

private slots :
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief slot to toggle the sim on and off
    //----------------------------------------------------------------------------------------------------------------------
    void toggleSim(bool s);
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief timer event trigered by updateTimer
    //----------------------------------------------------------------------------------------------------------------------
    void updateEvent();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief timer event trigered by recordTimer
    //----------------------------------------------------------------------------------------------------------------------
    void recordEvent();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief slot to toggle the recording on and off
    //----------------------------------------------------------------------------------------------------------------------
    void toggleRecord(bool s);
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief set update timer interval
    //----------------------------------------------------------------------------------------------------------------------
    void setTimerUpdateDuration(int ms);
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief slot to export current state of simulation
    //----------------------------------------------------------------------------------------------------------------------
    void exportSim();
	//----------------------------------------------------------------------------------------------------------------------
    /// @brief slot to pick the selected object
	//----------------------------------------------------------------------------------------------------------------------
    void selectRenderObject(int index);

    void selectExportDirectory();

private:
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief populate combo with selectable objects
    //----------------------------------------------------------------------------------------------------------------------
    void populateUI();

    void exportFrame(unsigned frame);


};

#endif // MAINWINDOW_H
